#####################################################################
echo "-----------------------------------------------------"
echo " exgdas_nceppost.sh.ecf" 
echo " Sep 07 - Chuang - Modified script to run unified post"
echo " July 14 - Carlis - Changed to 0.25 deg grib2 master file"
echo " Feb 16 - Lin - Modify to use Vertical Structure"
echo " Aug 17 - Meng - Modify to use 3-digit forecast hour naming"
echo "                 master and flux files"
echo " Dec 17 - Meng - Link sfc data file to flxfile "
echo "                 since fv3gfs does not output sfc files any more."
echo " Dec 17 - Meng - Add fv3gfs_downstream_nems.sh for pgb processing "
echo "                 and remove writing data file to /nwges"
echo "-----------------------------------------------------"
#####################################################################

set -x

cd $DATA

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

export POSTGPSH=${POSTGPSH:-$USHglobal/global_nceppost.sh}
export GFSDOWNSH=${GFSDOWNSH:-$USHglobal/fv3gfs_downstream_nems.sh}
export GFSDWNSH=${GFSDWNSH:-$USHglobal/fv3gfs_dwn_nems.sh}
export TRIMRH=${TRIMRH:-$USHglobal/trim_rh.sh}

############################################################
#  Define Variables:
#  -----------------
#  fhr          is the current forecast hour.
#  SLEEP_TIME   is the number of seconds to sleep before exiting with error.
#  SLEEP_INT    is the number of seconds to sleep between restrt file checks.
#  restart_file is the name of the file to key off of to kick off post.
############################################################

export IO=${LONB:-1440}
export JO=${LATB:-721}
# specify default model output format: 3 for sigio and 4
# for nemsio
export OUTTYP=${OUTTYP:-4}
export machine=${machine:-WCOSS_C}
############################################################
# Post Analysis Files before starting the Forecast Post
############################################################
# Chuang: modify to process analysis when post_times is 00
export stime=`echo $post_times | cut -c1-3`
if [ $OUTTYP -eq 4 ] ; then
   export loganl=$COMIN/${RUN}.t${cyc}z.atmanl.nemsio
else
   export loganl=$COMIN/${RUN}.t${cyc}z.sanl
fi

if test -f $loganl -a ${stime} = "anl"
then
   
# add new environmental variables for running new ncep post
# Validation date

   export VDATE=${PDY}${cyc}
   
# set outtyp to 1 because we need to run chgres in the post before model start running chgres
# otherwise set to 0, then chgres will not be executed in global_nceppost.sh
    
   export OUTTYP=${OUTTYP:-4}
   
# specify output file name from chgres which is input file name to nceppost 
# if model already runs gfs io, make sure GFSOUT is linked to the gfsio file
# new imported variable for global_nceppost.sh

   export GFSOUT=${RUN}.${cycle}.gfsioanl

# specify smaller control file for GDAS because GDAS does not
# produce flux file, the default will be /nwprod/parm/gfs_cntrl.parm

   if [ $GRIBVERSION = 'grib1' ]; then
     export IGEN=$IGEN_ANL
     export CTLFILE=$PARMglobal/gfs_cntrl.parm_anl
     export ANOMCATSH=$USHglobal/global_anomcat.sh
   elif [ $GRIBVERSION = 'grib2' ]; then
     export POSTGRB2TBL=${POSTGRB2TBL:-${NWROOT}/lib/g2tmpl/${g2tmpl_ver}/src/params_grib2_tbl_new}
     export PostFlatFile=${PostFlatFile:-$PARMglobal/postxconfig-NT-GFS-ANL.txt} 
   fi

   if [[ $RUN = gfs ]] ; then
     sed <$CTLFILE1 -e "s#${IGEN_ANL}#${IGEN_ANL}#" > ./ctlfile_anl
     export CTLFILE=./ctlfile_anl
   fi
   
   rm sigfile sfcfile
   if [ $OUTTYP -eq 4 ] ; then
      export NEMSINP=$COMIN/${RUN}.t${cyc}z.atmanl.nemsio
      #wm
      #cp $COMIN/${RUN}.t${cyc}z.sfcanl.nemsio sfcfile
   else
      cp $COMIN/${RUN}.t${cyc}z.sanl sigfile
      cp $COMIN/${RUN}.t${cyc}z.sfcanl sfcfile
   fi
   export SIGINP=sigfile
   export SFCINPUT=sfcfile
   export PGBOUT=pgbfile
   export PGIOUT=pgifile
   export PGBOUT2=pgbfile.grib2
   export PGIOUT2=pgifile.grib2.idx
   export IGEN=$IGEN_ANL
   export FILTER=1  

 #specify fhr even for analysis because postgp uses it    
#   export fhr=00
    
   $POSTGPSH


   if test $GRIBVERSION = 'grib2'
   then
     mv $PGBOUT $PGBOUT2

#Proces pgb files
     export FH=-1
     export downset=${downset:-1}
     $GFSDOWNSH

     export fhr3=anl
    
   fi

   if test $SENDCOM = 'YES'
   then
     export fhr3=anl
     if [ $GRIBVERSION = 'grib1' ]
     then
       MASTERANL=${RUN}.${cycle}.pgrbh${fhr3}
       MASTERANLIDX=${RUN}.${cycle}.pgrbih${fhr3}
     elif [ $GRIBVERSION = 'grib2' ]
     then
       MASTERANL=${RUN}.${cycle}.master.grb2${fhr3}
##########XXW Accord to Boi, fortran index should use *if${fhr}, wgrib index use .idx
       #MASTERANLIDX=${RUN}.${cycle}.master.grb2${fhr3}.idx
       MASTERANLIDX=${RUN}.${cycle}.master.grb2i${fhr3}
     fi
       
     if [ $GRIBVERSION = 'grib1' ]
     then
       $COPYGB -xg4 pgbfile $COMOUT/${MASTERANL}
       $GRBINDEX $COMOUT/${MASTERANL} $COMOUT/${MASTERANLIDX}
       $COPYGB -xg3 pgbfile $COMOUT/${RUN}.${cycle}.pgrbanl
       $GRBINDEX $COMOUT/${RUN}.${cycle}.pgrbanl $COMOUT/${RUN}.${cycle}.pgrbianl
     elif [ $GRIBVERSION = 'grib2' ]
     then
       cp $PGBOUT2  $COMOUT/${MASTERANL}
       $GRB2INDEX $PGBOUT2 $COMOUT/${MASTERANLIDX}
     fi

      if test $SENDDBN = 'YES'
      then
        run=`echo $RUN | tr '[a-z]' '[A-Z]'`
        if [ $GRIBVERSION = 'grib1' ] 
        then
          $DBNROOT/bin/dbn_alert MODEL ${run}_MSC_sfcanl $job $COMOUT/${RUN}.${cycle}.sfcanl
          $DBNROOT/bin/dbn_alert MODEL ${run}_SA $job $COMOUT/${RUN}.t${cyc}z.sanl
          $DBNROOT/bin/dbn_alert MODEL ${run}_PGA $job $COMOUT/${RUN}.t${cyc}z.pgrbanl
          $DBNROOT/bin/dbn_alert MODEL ${run}_PGAI $job $COMOUT/${RUN}.t${cyc}z.pgrbianl
	elif [ $GRIBVERSION = 'grib2' ] 
        then
	  $DBNROOT/bin/dbn_alert MODEL ${run}_MSC_sfcanl $job $COMOUT/${RUN}.${cycle}.sfc${fhr3}.nemsio
          $DBNROOT/bin/dbn_alert MODEL ${run}_SA $job $COMIN/${RUN}.t${cyc}z.atm${fhr3}.nemsio
          $DBNROOT/bin/dbn_alert MODEL GDAS_PGA_GB2 $job $COMOUT/${RUN}.${cycle}.pgrb2.1p00.${fhr3}
          $DBNROOT/bin/dbn_alert MODEL GDAS_PGA_GB2_WIDX $job $COMOUT/${RUN}.${cycle}.pgrb2.1p00.${fhr3}.idx
#         fi
	fi
      fi

   fi
   rm pgbfile pgifile pgbfile.grib2 tfile prmsl h5wav
   exit
fi

SLEEP_LOOP_MAX=`expr $SLEEP_TIME / $SLEEP_INT`

############################################################
# Loop Through the Post Forecast Files 
############################################################

for fhr in $post_times
do
    ###############################
    # Start Looping for the 
    # existence of the restart files
    ###############################
    set -x
    export pgm="postcheck"
    ic=1
    while [ $ic -le $SLEEP_LOOP_MAX ]
    do
       if test -f ${restart_file}${fhr}.nemsio
       then
          break
       else
          ic=`expr $ic + 1`
          sleep $SLEEP_INT
       fi
       ###############################
       # If we reach this point assume
       # fcst job never reached restart 
       # period and error exit
       ###############################
       if [ $ic -eq $SLEEP_LOOP_MAX ]
       then
          echo " *** FATA ERROR: No model output in nemsio for f${fhr} "
          export err=9
          err_chk
       fi
    done
    set -x

    msg="Starting post for fhr=$fhr"
    postmsg "$jlogfile" "$msg"

    ###############################
    # Put restart files into /nwges 
    # for backup to start Model Fcst
    ###############################
    rm -f sigfile sfcfile flxfile nemsfile
    if [ $OUTTYP -eq 4 ] ; then
      ln -sf $COMIN/${RUN}.t${cyc}z.atmf$fhr.nemsio nemsfile
      export NEMSINP=nemsfile
      #wm
      #ln -sf $COMIN/${RUN}.t${cyc}z.sfcf$fhr.nemsio sfcfile
      #export SFCINPUT=sfcfile
    else
      ln -sf $COMIN/${RUN}.t${cyc}z.sf$fhr sigfile
      export SIGINP=sigfile
      ln -sf $COMIN/${RUN}.t${cyc}z.bf$fhr sfcfile
      export SFCINPUT=sfcfile
    fi

# specify 0.25 degree output
    if [ $IDRT -eq 0 -a $OUTTYP -le 3 ] ; then
       export D3DINP=
       if [ $LONB -eq 360 ] ; then
         $COPYGB -xg3 $COMIN/${RUN}.t${cyc}z.sfluxgrbf$fhr $DATA/flxfile
       elif [ $LONB -eq 720 ] ; then
         $COPYGB -xg4 $COMIN/${RUN}.t${cyc}z.sfluxgrbf$fhr $DATA/flxfile
       elif [ $LONB -eq 1440 ] ; then
          $COPYGB -g193 -i0 -x $COMIN/${RUN}.t${cyc}z.sfluxgrbf$fhr $DATA/flxfile
       fi
       export FLXINP=$DATA/flxfile
    else
       if [ $OUTTYP -eq 4 ] ; then
         #wm
         #ln -sf $COMIN/${RUN}.t${cyc}z.flxf$fhr.nemsio flxfile
         ln -sf $COMIN/${RUN}.t${cyc}z.sfcf$fhr.nemsio flxfile
         export FLXINP=flxfile
       else
         ln -sf $COMIN/${RUN}.t${cyc}z.sfluxgrbf$fhr flxfile
         export FLXINP=flxfile
       fi
    fi

    if test $fhr -gt 0
    then
       export IGEN=$IGEN_FCST
    else
       export IGEN=$IGEN_ANL
    fi
    
# add new environmental variables for running new ncep post
# Validation date

    export VDATE=`${NDATE} +${fhr} ${PDY}${cyc}`
   
# set to 3 to output lat/lon grid
     
    export OUTTYP=${OUTTYP:-4}

    if [ $GRIBVERSION = 'grib1' ] ; then
      if test $fhr -gt 0
      then
        export IGEN=$IGEN_FCST
      else
        export IGEN=$IGEN_ANL
      fi
      export CTLFILE=$PARMglobal/gfs_cntrl.parm
      export ANOMCATSH=$USHglobal/global_anomcat.sh
    elif [ $GRIBVERSION = 'grib2' ] ; then
      export POSTGRB2TBL=${POSTGRB2TBL:-${NWROOT}/lib/g2tmpl/${g2tmpl_ver}/src/params_grib2_tbl_new}
      export PostFlatFile=$PARMglobal/postxconfig-NT-GFS.txt
      if [ $RUN = gfs ] ; then
        export IGEN=$IGEN_GFS
        if [ $fhr -gt 0 ] ; then export IGEN=$IGEN_FCST ; fi
      else
        export IGEN=$IGEN_GDAS_ANL
        if [ $fhr -gt 0 ] ; then export IGEN=$IGEN_FCST ; fi
      fi
      if [[ $RUN = gfs ]] ; then
        if test $fhr -eq 0
        then
          export PostFlatFile=$PARMglobal/postxconfig-NT-GFS-F00.txt
          export CTLFILE1=$PARMglobal/postcntrl_gfs_f00.xml
          sed <$CTLFILE1 -e "s#${IGEN_FCST}#${IGEN_ANL}#" > ./ctlfile_f00
          export CTLFILE=./ctlfile_f00
        else
          export CTLFILE1=${CTLFILEGFS:-$PARMglobal/postcntrl_gfs.xml}
          export CTLFILE=${CTLFILEGFS:-$PARMglobal/postcntrl_gfs.xml}
        fi
      else
        if test $fhr -eq 0
        then
          export PostFlatFile=$PARMglobal/postxconfig-NT-GFS-F00.txt 
          export CTLFILE1=${CTLFILEGFS:-$PARMglobal/postcntrl_gfs_f00.xml}
          sed <$CTLFILE1 -e "s#${IGEN_FCST}#${IGEN_GDAS_ANL}#" > ./ctlfile_f00
          export CTLFILE=./ctlfile_f00
        else
          export CTLFILE1=${CTLFILEGFS:-$PARMglobal/postcntrl_gfs.xml}
          export CTLFILE=${CTLFILEGFS:-$PARMglobal/postcntrl_gfs.xml}
        fi
      fi
    fi
    
#    export SIGINP=sigfile
#    export NEMSINP=${NEMSINP:-nemsfile}
#    export SFCINPUT=sfcfile
#    export FLXINP=${FLXINP:-flxfile}
    export FLXIOUT=flxifile
    export PGBOUT=pgbfile
    export PGIOUT=pgifile
    export PGBOUT2=pgbfile.grib2
    export PGIOUT2=pgifile.grib2.idx
    export FILTER=1
    
    $POSTGPSH

    if test $GRIBVERSION = 'grib2'
    then
      mv $PGBOUT $PGBOUT2
    fi

    #wm Process pgb files
    export FH=`expr $fhr + 0`
    export downset=${downset:-1}
    $GFSDOWNSH

    
    if [ $SENDDBN = YES ]; then
      run=`echo $RUN | tr '[a-z]' '[A-Z]'`
      $DBNROOT/bin/dbn_alert MODEL ${run}_PGB2_0P25 $job $COMOUT/${RUN}.${cycle}.pgrb2.0p25.f${fhr3}
      $DBNROOT/bin/dbn_alert MODEL ${run}_PGB2_0P25_WIDX $job $COMOUT/${RUN}.${cycle}.pgrb2.0p25.f${fhr3}.idx
      $DBNROOT/bin/dbn_alert MODEL ${run}_PGB_GB2 $job $COMOUT/${RUN}.${cycle}.pgrb2.1p00.f${fhr3}
      $DBNROOT/bin/dbn_alert MODEL ${run}_PGB_GB2_WIDX $job $COMOUT/${RUN}.${cycle}.pgrb2.1p00.f${fhr3}.idx
#      $DBNROOT/bin/dbn_alert MODEL ${run}_PGB_GB2 $job $COMOUT/${RUN}.${cycle}.pgrb2.0p50.f${fhr3}
#      $DBNROOT/bin/dbn_alert MODEL ${run}_PGB_GB2_WIDX $job $COMOUT/${RUN}.${cycle}.pgrb2.0p50.f${fhr3}.idx
      $DBNROOT/bin/dbn_alert MODEL ${run}_PGB $job $COMOUT/${RUN}.${cycle}.pgrbf${fhr}
      $DBNROOT/bin/dbn_alert MODEL ${run}_PGBI $job $COMOUT/${RUN}.${cycle}.pgrbif${fhr}
    fi
    
    echo "$PDY$cyc$fhr" > $COMOUT/${RUN}.t${cyc}z.${RUN_FLAG}control

    export fhr3=$fhr
    if [ $GRIBVERSION = 'grib1' ]
    then
      MASTERFHR=${RUN}.${cycle}.pgrbh${fhr}
      MASTERFHRIDX=${RUN}.${cycle}.pgrbih${fhr}
    elif [ $GRIBVERSION = 'grib2' ]
    then
      MASTERFHR=${RUN}.${cycle}.master.grb2f${fhr}
      MASTERFHRIDX=${RUN}.${cycle}.master.grb2if${fhr}
    fi
 
    if test $SENDCOM = 'YES'
    then
      if [ $GRIBVERSION = 'grib1' ] ; then
        $COPYGB -xg4 pgbfile $COMOUT/${MASTERFHR}
        $GRBINDEX $COMOUT/${MASTERFHR} $COMOUT/${MASTERFHRIDX}
	mv pgbfile tmpfile
        $COPYGB -xg3 tmpfile pgbfile
        $GRBINDEX pgbfile pgifile
      elif [ $GRIBVERSION = 'grib2' ] ; then
        cp $PGBOUT2 $COMOUT/${MASTERFHR}
        $GRB2INDEX $PGBOUT2 $COMOUT/${MASTERFHRIDX}
      fi 

# Model generated flux files will be in nemsio after FY17 upgrade
# use post to generate Grib2 flux files

      if [ $OUTTYP -eq 4 ] ; then
        export NEMSINP=$COMIN/${RUN}.t${cyc}z.atmf$fhr.nemsio
        export FLXINP=$COMIN/${RUN}.t${cyc}z.sfcf$fhr.nemsio
        #wm
        #export FLXINP=$COMIN/${RUN}.t${cyc}z.flxf$fhr.nemsio
        if test $fhr -eq 0
        then
         export PostFlatFile=$PARMglobal/postxconfig-NT-GFS-FLUX-F00.txt
        else
         export PostFlatFile=$PARMglobal/postxconfig-NT-GFS-FLUX.txt
        fi
        export PGBOUT=fluxfile
        export FILTER=0
        $POSTGPSH
        mv fluxfile $COMOUT/${RUN}.t${cyc}z.sfluxgrbf${fhr}.grib2
        $WGRIB2 -s $COMOUT/${RUN}.t${cyc}z.sfluxgrbf${fhr}.grib2 > $COMOUT/${RUN}.t${cyc}z.sfluxgrbf${fhr}.grib2.idx
      else 
        $GRBINDEX $COMIN/${RUN}.t${cyc}z.sfluxgrbf${fhr} flxifile
        $CNVGRIB -g12 -p40 $COMIN/${RUN}.${cycle}.sfluxgrbf${fhr} flxfile.grib2
        $WGRIB2 flxfile.grib2 -s >flxfile.grib2.idx
        cp flxifile $COMOUT/${RUN}.${cycle}.sfluxgrbif${fhr}
        cp flxfile.grib2 $COMOUT/${RUN}.${cycle}.sfluxgrbf${fhr}.grib2
        cp flxfile.grib2.idx $COMOUT/${RUN}.${cycle}.sfluxgrbf${fhr}.grib2.idx
      fi

      if test "$SENDDBN" = 'YES' -a  \( "$RUN" = 'gdas' \) -a `expr $fhr % 3` -eq 0
      then
        $DBNROOT/bin/dbn_alert MODEL ${run}_SF $job $COMOUT/${RUN}.${cycle}.atmf$fhr.nemsio
        $DBNROOT/bin/dbn_alert MODEL ${run}_BF $job $COMOUT/${RUN}.${cycle}.sfcf$fhr.nemsio
        if [ $OUTTYP -le 3 ] ; then
          $DBNROOT/bin/dbn_alert MODEL ${run}_SGB $job $COMOUT/${RUN}.${cycle}.sfluxgrbf$fhr
          $DBNROOT/bin/dbn_alert MODEL ${run}_SGBI $job $COMOUT/${RUN}.${cycle}.sfluxgrbif$fhr
        fi
        $DBNROOT/bin/dbn_alert MODEL ${run}_SGB_GB2 $job $COMOUT/${RUN}.${cycle}.sfluxgrbf${fhr}.grib2
        $DBNROOT/bin/dbn_alert MODEL ${run}_SGB_GB2_WIDX $job $COMOUT/${RUN}.${cycle}.sfluxgrbf${fhr}.grib2.idx
      fi
    fi 

    rm pgbfile pgifile pgbfile.grib2 flxfile flxifile flxfile.grib2 flxfile.grib2.idx tfile prmsl h5wav

done 

cat $pgmout

########################################################

msg='ENDED NORMALLY.'
postmsg "$jlogfile" "$msg"
exit 0

################## END OF SCRIPT #######################
